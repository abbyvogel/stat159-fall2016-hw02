# this function computes the test statistic on one data set
# data = a vector of data values
# hasTrtment = a logical vector indicating whether the observation is
#              in the treatment group (TRUE if in treatment)
# for example, if the test statistic = difference of means,
# we would write:
test_stat <- mean(data[hasTrtment]) - mean(data[!hasTrtment])
return(test_stat)
}
simulatePermuteDist(bird$calcium, bird$treatment, k=10)
simulatePermuteDist <- function(data, hasTrtment, k = 1000){
# this function computes the test statistic on one data set
# data = a vector of data values
# hasTrtment = a logical vector indicating whether the observation is
#              in the treatment group (TRUE if in treatment)
n <- length(data)
# permute the data k times:
sim_data <- replicate(k, sample(data, 5))
# compute the test statistic on each simulated data set
# use the difference of means as the test statistic in this case
test_stats <- apply(sim_data, 2,
function(x){ computeTestStat(x, hasTrtment) })
return(test_stats)
}
simulatePermuteDist(bird$calcium, bird$treatment, k=10)
simulatePermuteDist <- function(data, hasTrtment, k = 1000){
# this function computes the test statistic on one data set
# data = a vector of data values
# hasTrtment = a logical vector indicating whether the observation is
#              in the treatment group (TRUE if in treatment)
n <- length(data)
# permute the data k times:
sim_data <- replicate(k, sample(data, 10))
# compute the test statistic on each simulated data set
# use the difference of means as the test statistic in this case
test_stats <- apply(sim_data, 2,
function(x){ computeTestStat(x, hasTrtment) })
return(test_stats)
}
simulatePermuteDist(bird$calcium, bird$treatment, k=10)
permuteTest <- function(data, hasTrtment, k = 1000){
# compute the test statistic of your data
current_stat <- computeTestStat(data, hasTrtment)
# simulate test statistics under the randomization hypothesis
simulated_stats <- simulatePermuteDist(data, hasTrtment, k)
# compute p-value based on the distribution of the statistics
# simulated on the previous line
pval <- length(which(simulated_stat >= current_stat))/k
# print pretty results:
cat("Your test statistic:\n")
cat(paste(current_stat, "\n"))
cat("p-value:\n")
cat(paste(pval, "\n"))
return(c(current_stat, pval))
}
permuteTest(bird$calcium, bird$treatment)
permuteTest <- function(data, hasTrtment, k = 1000){
# compute the test statistic of your data
current_stat <- computeTestStat(data, hasTrtment)
# simulate test statistics under the randomization hypothesis
simulated_stats <- simulatePermuteDist(data, hasTrtment, k)
# compute p-value based on the distribution of the statistics
# simulated on the previous line
pval <- length(which(simulated_stats >= current_stat))/k
# print pretty results:
cat("Your test statistic:\n")
cat(paste(current_stat, "\n"))
cat("p-value:\n")
cat(paste(pval, "\n"))
return(c(current_stat, pval))
}
permuteTest(bird$calcium, bird$treatment)
?runif
runif(15, max=29)
sample(1:29, 15)
picable <- c(japan,
man,
woman,
usa,
cat,
heart,
alien,
skull,
lipstick,
shoes,
hat,
glasses,
tie,
briefcase,
bell,
tree,
phone,
book,
mailbox,
pin,
scissors,
piano,
target,
dice,
dog,
koala,
bottle,
fork,
knife,
spoon,
donut,
lollipop,
egg,
apple,
corn,
sun,
moon,
bridge,
hammer,
wrench,
bathtub,
anchor,
baseball,
football,
flag,
train,
diamond,
flame,
lock,
key)
picable <- c("japan",
"man",
"woman",
"usa",
"cat",
"heart",
"alien",
"skull",
"lipstick",
"shoes",
"hat",
"glasses",
"tie",
"briefcase",
"bell",
"tree",
"phone",
"book",
"mailbox",
"pin",
"scissors",
"piano",
"target",
"dice",
"dog",
"koala",
"bottle",
"fork",
"knife",
"spoon",
"donut",
"lollipop",
"egg",
"apple",
"corn",
"sun",
"moon",
"bridge",
"hammer",
"wrench",
"bathtub",
"anchor",
"baseball",
"football",
"flag",
"train",
"diamond",
"flame",
"lock",
"key")
sample(picable, 15)
?sample
trtb <- sample(picable, 15)
class(trtb)
trtb
picable - trtb
picable[picable != trtb]
picable[picable != "trtb"]
sample(picable[picable != "trtb"], 15)
length(picable)
trtb
picable <- c("japan",
"man",
"woman",
"usa",
"cat",
"heart",
"alien",
"skull",
"lipstick",
"hat",
"glasses",
"briefcase",
"bell",
"book",
"mailbox",
"pin",
"scissors",
"target",
"dice",
"bottle",
"knife",
"spoon",
"donut",
"lollipop",
"corn",
"sun",
"moon",
"bridge",
"hammer",
"wrench",
"baseball",
"diamond",
"flame",
"lock",
"key")
trtc <- sample(picable, 15)
trtc
picable <- c(
"man",
"usa",
"cat",
"heart",
"alien",
"lipstick",
"hat",
"bell",
"book",
"mailbox",
"pin",
"scissors",
"target",
"dice",
"donut",
"corn",
"moon",
"baseball",
"diamond",
"lock",
"key")
trtD <- sample(picable, 15)
trtd
trtD
trtc
sample(trtc, 7)
trtb
christine <- c(11, 12, 15, 14, 16)
var(christine)
?df
pf(.95, 3, 2)
pf(.95, 3, 2, lower.tail=FALSE)
pf(.05, 3, 2, lower.tail=FALSE)
?qf
qf(.05, 3, 2, lower.tail=FALSE)
df(19.16429, 3, 2, lower.tail=FALSE)
qf(19.16429, 3, 2, lower.tail=FALSE)
pf(19.16429, 3, 2, lower.tail=FALSE)
pf(19.16429, 3, 2, lower.tail=FALSE)
pf(19.16429, 3, 2, ncp=1, lower.tail=FALSE)
136^2 + 10^2 + 126^2
pf(19.16429, 3, 2, ncp=8.36, lower.tail=FALSE)
qf(.05, 3, 18, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=8.36*2, lower.tail=FALSE)
mean(c(5, 8, 8, 11))
3^2 + 3^2
18*4/3
pf(19.16429, 3, 2, ncp=24, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=24*2, lower.tail=FALSE)
8/4.3
qf(.05, 3, 2, lower.tail=FALSE)
pf(19.16429, 3, 2, ncp=1.86065, lower.tail=FALSE)
qf(.05, 3, 18, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=1.86065*2, lower.tail=FALSE)
qf(.05, 3, 30, lower.tail=FALSE)
pf(2.922277, 3, 30, ncp=1.86065*3, lower.tail=FALSE)
qf(.05, 3, 42, lower.tail=FALSE)
pf(2.827049, 3, 42, ncp=1.86065*4, lower.tail=FALSE)
32/4.3
pf(19.16429, 3, 2, ncp=7.44186, lower.tail=FALSE)
qf(.05, 3, 18, lower.tail=FALSE)
qf(.05, 3, 18, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=7.44186*2, lower.tail=FALSE)
pf(2.922277, 3, 30, ncp=0.8384207*3, lower.tail=FALSE)
pf(2.922277, 3, 30, ncp=7.44186*3, lower.tail=FALSE)
pf(19.16429, 3, 2, ncp=1.860465, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=0.07924875*2, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=0.07924875*2, lower.tail=FALSE)
qf(.05, 3, 18, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=1.860465*2, lower.tail=FALSE)
qf(.05, 3, 30, lower.tail=FALSE)
pf(2.922277, 3, 30, ncp=1.860465*3, lower.tail=FALSE)
qf(.05, 3, 42, lower.tail=FALSE)
pf(2.827049, 3, 42, ncp=1.86065*4, lower.tail=FALSE)
qf(.05, 3, 54, lower.tail=FALSE)
pf(2.775762, 3, 54, ncp=1.86065*5, lower.tail=FALSE)
qf(.05, 3, 66, lower.tail=FALSE)
pf(2.743711, 3, 66, ncp=1.86065*6, lower.tail=FALSE)
pf(2.743711, 3, 66, ncp=1.86065*6, lower.tail=FALSE)
poweroftau3 <- c(0.07924875, 0.2757441, 0.4330024, 0.5746942, 0.692315, 0.7842079)
plot(poweroftau3)
plot(poweroftau3, main= "Power by M for Ti= (-1 0 0 1)")
plot(poweroftau3, main= "Power by # of Square for Ti= (-1 0 0 1)")
plot(poweroftau3, main= "Power by # of Squares for Ti= (-1 0 0 1)", xlab="Number of Latin Squares",
ylab="Power", pch=19)
32/4.3
qf(.05, 3, 2, lower.tail=FALSE)
pf(19.16429, 3, 2, ncp=7.44186, lower.tail=FALSE)
qf(.05, 3, 18, lower.tail=FALSE)
pf(3.159908, 3, 18, ncp=7.44186*2, lower.tail=FALSE)
pf(2.922277, 3, 30, ncp=7.44186*3, lower.tail=FALSE)
pf(2.827049, 3, 42, ncp=7.44186*4, lower.tail=FALSE)
poweroftau2 <- c(0.1617019, 0.8384207, 0.9720373, 0.9961867)
plot(poweroftau3, main= "Power by # of Squares for Ti= (-2 0 0 2)", xlab="Number of Latin Squares",
ylab="Power", pch=19)
plot(poweroftau2, main= "Power by # of Squares for Ti= (-2 0 0 2)", xlab="Number of Latin Squares",
ylab="Power", pch=19)
x= (1,5)
x= c(1,5)
?sample
?append
x <- c(1:10)
y <- c(sample(c(1:50), 10))
plot(x, y)
plot(x, y, pch=19)
install.packages("spocc")
x= c(1,5)
x= c(1,5)
library("spocc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
R.Version()
?R.Version
getwd()
setwd("/Users/abbyvogel/Downloads")
ad <- read.csv("Advertising.csv")
head(ad)
?read.csv
ad <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
bad <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
?lm
lm(Sales ~ TV, ad)
reg <- lm(Sales ~ TV, ad)
reg
c(reg)
reg[1]
reg$coefficients[1]
reg$coefficients[2]
?lm
plot(Sales~TV)
plot(ad$Sales~ad$TV)
plot(ad$Sales~ad$TV, pch=19, col="blue")
?abline
abline(reg$coefficients[1], b=reg$coefficients[2])
abline(reg$coefficients[1], b=reg$coefficients[2], col="red")
plot(ad$Sales~ad$TV, pch=19, col="blue", xlab = "TV", ylab= "Sales")
plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales")
abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression")
abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
summary(reg)
?sink
?sink
setwd(..)
?setwd
?sink
?file
?txt
?png
?save
plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression", abline(reg$coefficients[1], b=reg$coefficients[2], col="blue"))
?plot
regplot <- plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression")
regline <- abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
?save
save(regplot, regline, file="~/Desktop/stat159-fall2016-hw02/data/eda-output.txt")
save(regplot, regline, file="~/Desktop/stat159-fall2016-hw02/data/regression.RData")
?png
regplot <- plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression")
regline <- abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
png(file="~/Desktop/stat159-fall2016-hw02/images/scatterplot-tv-sales.png")
?png
png(file="~/Desktop/stat159-fall2016-hw02/images/scatterplot-tv-sales.png")
regplot <- plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression")
regline <- abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
dev.off()
?plot
?pdf
pdf(file="~/Desktop/stat159-fall2016-hw02/images/scatterplot-tv-sales.pdf")
regplot <- plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression")
regline <- abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
dev.off()
sumreg <- summary(reg)
sumreg
save(reg, sumreg, file="~/Desktop/stat159-fall2016-hw02/data/regression.RData")
summary(ad$TV)
summary(ad$Sales)
print("Summary Statistics of Sales")
summary(ad$Sales)
print("Summary Statistics of Sales")
summary(ad$Sales)
?hist
hist(ad$TV)
print("Summary Statistics of Sales (Dollars)")
hist(ad$TV, xlab= "Dollars Spent on TV Advertising", main= "Histograph of Cost of TV Advertising")
hist(ad$Sales, xlab= "Sales (Thousands of Dollars)", main= "Histograph of Sales")
png(file="~/Desktop/stat159-fall2016-hw02/images/histogram-tv.png")
hist(ad$TV, xlab= "TV Advertising (Thousands of Dollars)", main= "Histograph of Cost of TV Advertising")
dev.off()
pdf(file="~/Desktop/stat159-fall2016-hw02/images/histogram-tv.pdf")
hist(ad$TV, xlab= "TV Advertising (Thousands of Dollars)", main= "Histograph of Cost of TV Advertising")
dev.off()
png(file="~/Desktop/stat159-fall2016-hw02/images/histogram-sales.png")
hist(ad$Sales, xlab= "Sales (Thousands of Units)", main= "Histograph of Sales")
dev.off()
#export the hist-tv to jpg
pdf(file="~/Desktop/stat159-fall2016-hw02/images/histogram-sales.pdf")
hist(ad$Sales, xlab= "Sales (Thousands of Units)", main= "Histograph of Sales")
dev.off()
#go bears
?sink
sink("~/Desktop/stat159-fall2016-hw02/data/eda-output.txt")
print("Summary Statistics of Thousands of Dollars Spent on TV Advertising")
summary(ad$TV)
print("Summary Statistics of Sales (Thousands of Units)")
summary(ad$Sales)
sink()
?save
?unlink
dex <- Users/abbyvogel/Desktop/stat159-fall2016-hw02/data/regression-data.RData
dex <- /Users/abbyvogel/Desktop/stat159-fall2016-hw02/data/regression-data.RData
pwd
getwd()
dex <- "/Users/abbyvogel/Desktop/stat159-fall2016-hw02/data/regression-data.RData"
setwd("Users/abbyvogel/Desktop/stat159-fall2016-hw02/data")
setwd("/Users/abbyvogel/Desktop/stat159-fall2016-hw02/data")
class(reg)
reg
sumreg
tableCat <- function(inFrame) {
outText <- paste(names(inFrame), collapse = " | ")
outText <- c(outText, paste(rep("---", ncol(inFrame)), collapse = " | "))
invisible(apply(inFrame, 1, function(inRow) {
outText <<- c(outText, paste(inRow, collapse = " | "))
}))
return(outText)
}
tableCat("/Users/abbyvogel/Desktop/stat159-fall2016-hw02/data/regression-script.RData")
tableCat(sumreg)
tableCat(reg)
load("/Users/abbyvogel/Desktop/stat159-fall2016-hw02/data/regression-script.RData")
load("/Users/abbyvogel/Desktop/stat159-fall2016-hw02/data/regression.RData")
reg
sumreg
setwd("~/Desktop/stat159-fall2016-hw02/report")
reg
sumreg
sumreg$coefficients
mtcars
?sprintf
library(xtable)
install.packages("xtable")
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
reg <- lm(hp ~mpg, data=mtcars)
reg_table <- xtable(reg)
print(reg_table)
print(reg_table, type ="latex", file="reg-table.tex")
print(reg_table, type ="latex")
reg <- lm(hp ~mpg, data=mtcars)
reg_table <- xtable(reg)
print(reg_table, type ="latex")
ad <- read.csv("../data/Advertising.csv")
reg <- lm(Sales ~ TV, ad)
regplot <- plot(ad$Sales~ad$TV, pch=19, col="red", xlab = "TV", ylab= "Sales", main="Linear Regression")
regline <- abline(reg$coefficients[1], b=reg$coefficients[2], col="blue")
sumreg <- summary(reg)
save(reg, sumreg, file="~/Desktop/stat159-fall2016-hw02/data/regression.RData")
reg_table <- xtable(reg)
print(reg_table, type="latex")
reg
reg_table <- xtable(sumreg$coefficients)
sumreg
sumreg$residuals
sumreg$cov.unscaled
sumreg
sumreg$sigma
sumreg$df
sumreg$r.squared
sumreg$fstatistic
sumreg$cov.unscaled
sumreg$adj.r.squared
str(sumreg)
sumreg$coefficients
?df
?as.data.frame
c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1])
mytable <- as.df(c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), row.names=c('Quantity', 'Value'), col.names='RSS', 'R2', 'F-Stat')
?data.frame
mytable <- data.frame(c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), row.names=c('Quantity', 'Value'), col.names='RSS', 'R2', 'F-Stat')
mytable <- data.frame(c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), col.names=c('Quantity', 'Value'), row.names='RSS', 'R2', 'F-Stat')
mytable <- data.frame(c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]),c('RSS', 'R2', 'F-Stat') col.names=c('Quantity', 'Value'))
mytable <- data.frame("Quantity" = c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), "Value" = c('RSS', 'R2', 'F-Stat'))
class(sumreg$coefficients)
?matrix
mytable <- matrix("Quantity" = c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), "Value" = c('RSS', 'R2', 'F-Stat'))
mytable <- data.frame("Quantity" = c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), "Value" = c('RSS', 'R2', 'F-Stat'))
mytable <- data.frame("Quantity" = c(sumreg$sigma, sumreg$adj.r.squared, sumreg$fstatistic[1]), "Value" = c('RSS', 'R2', 'F-Stat'))
rss_table <- xtable(mytable, caption="Regression Quality Indices")
print(rss_table, type="latex")
?xtable
